name: SUH-PROJECT-CONTROL

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-20.04
    steps:
      # 소스 코드 체크아웃
      - name: 소스 코드 가져오기
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 소스 코드 체크아웃 확인
        run: echo "소스 코드를 성공적으로 가져왔습니다."

      # 전체 프로젝트 업로드
      - name: 전체 프로젝트 업로드
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          port: 2022
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "."
          target: "${{ secrets.SUH_PROJECT_CONTROL_DIR }}"
          exclude: ".git,.idea,.gitignore,suh-project-control.iml,.github" # 제외 파일, 폴더

      - name: 전체 프로젝트 업로드 확인
        run: echo "프로젝트가 서버에 성공적으로 업로드되었습니다."

      # 4. SSH 접속 → bin 폴더 내 스크립트에 실행 권한 부여
      - name: 스크립트 실행 권한 설정
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          port: 2022
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            set -e  # 에러 발생 시 스크립트 중단

            echo "=== 환경 변수 설정 중 ==="
            export PATH=$PATH:/usr/local/bin

            echo "=== database.yml 파일 존재 여부 확인 ==="
            if [[ ! -f "${{ secrets.SUH_PROJECT_CONTROL_DIR }}/config/database.yml" ]]; then
              echo "Error: database.yml 파일이 존재하지 않습니다."
              exit 1
            fi

            echo "=== /bin 스크립트 실행 권한 추가 ==="
            echo $PW | sudo -S chmod +x ${SUH_PROJECT_CONTROL_BIN}/*.sh
            echo "=== 스크립트 실행 권한 설정 완료 ==="
